---
- version: 1.1.0
  summary:
  date: 2025-01-04
  fixed:
  - "Calling `Publisher#unsubscribe` when there's a block subscription now works (via #17) (@Aerdayne)"
  changed:
  - 'Set minimum Ruby version to 3.1.0 (@flash-gordon)'
- version: 1.0.1
  summary:
  date: 2022-11-20
  fixed:
  - 'Make listeners hash thread-safe (via #16) (@mensfeld)'
- version: 1.0.0
  summary:
  date: 2022-11-04
  fixed:
  - 'Make listeners hash thread-safe (via #16) (@mensfeld)'
  added:
  changed:
  - This version is compatible with recently released dry-rb dependencies (@flash-gordon)
  - Bumped version to 1.0.0 (@solnic)
- version: 0.4.0
  summary:
  date: 2022-10-15
  fixed:
  - "`subscribed?` now detects instance method blocks too (via #15) (@guilherme-andrade)"
  added:
  changed:
  - Use zeitwerk for auto-loading (@flash-gordon)
- version: 0.3.0
  summary:
  date: '2021-04-11'
  fixed:
  - 'Trying to publish an unregistered event raises a meaningful error now (issue
    #13 fixed via #14) (@landongrindheim)'
  added:
  changed:
  - Dependency on dry-equalizer was changed to dry-core (@solnic)
- version: 0.2.0
  date: '2019-07-24'
  fixed:
  - 'Trying to subscribe to a non-existant event raises an exception (issue #3) (@GustavoCaso
    + @mensfeld)'
- version: 0.1.1
  date: '2019-03-22'
  added:
  - |-
    Subscription filters can be more complex: nested hash inclusion, array inclusion, and proc checks were added (flash-gordon)
      ```ruby
      # nested hash check
      subscribe(:event, logger: { level: :info })
      # pass
      trigger(:event, logger: { level: :info, output: :stdin })
      # filtered out
      trigger(:event, logger: { level: :debug })
      trigger(:event, something: :else)

      # array inclusion
      subscribe(:event, logger: { level: %i(info warn error) })
      # pass
      trigger(:event, logger: { level: :info })
      trigger(:event, logger: { level: :error })
      trigger(:event, logger: { level: :info, output: :stdin })
      # filtered out
      trigger(:event, logger: { level: :debug })

      # proc checks
      # here acts as array inclusion example
      subscribe(:event, logger: { level: -> level { %i(info warn error).include?(level) })
      ```
- version: 0.1.0
  date: '2018-01-02'
  summary: First public release
